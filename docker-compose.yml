version: '3.5'
services:
    plex:
        image: linuxserver/plex
        container_name: plex
        volumes:
            - ./plex-config:/config
            - ./plex-transcode:/data/transcode
            # Media dirs injected here with override config
        environment:
            - VERSION=latest
            - TZ=Europe/Brussels
            - PUID=1000
            - PGID=1000
        ports:
            - 32400:32400
        networks:
            - traefik

    transmission:
        image: linuxserver/transmission
        container_name: transmission
        environment:
          - PUID=1000
          - PGID=1000
          - TZ=Europe/Brussels
          - USER=admin
          - PASS=admin
        volumes:
          - ./transmission-config:/config
          - ./transmission-settings.json:/config/settings.json
          - type: bind
            source: ${TRANSMISSION_DIR}/downloads
            target: /downloads
          - type: bind
            source: ${TRANSMISSION_DIR}/watch
            target: /watch
        ports:
          - 51413:51413
          - 51413:51413/udp
        restart: unless-stopped
        depends_on:
            - plex
        labels:
            - traefik.enable=true
            - traefik.http.services.transmission.loadbalancer.server.port=9091
            - traefik.http.routers.transmission.rule=PathPrefix(`/media/transmission`)
        networks:
            - traefik

    bazarr:
        image: linuxserver/bazarr
        container_name: bazarr
        environment:
            - TZ=Europe/Brussels
            - PUID=1000
            - PGID=1000
        volumes:
            - ./bazarr-config:/config
            - ./bazarr-config.ini:/config/config/config.ini
            # Media dirs injected here with override config
        depends_on:
            - plex
        labels:
            - traefik.enable=true
            - traefik.http.services.bazarr.loadbalancer.server.port=6767
            - traefik.http.routers.bazarr.rule=PathPrefix(`/media/bazarr`)
        networks:
            - traefik

    radarr:
        image: linuxserver/radarr
        container_name: radarr
        volumes:
            - ./radarr-config:/config
            - ./radarr-config.xml:/config/config.xml
            - type: bind
              source: ${TRANSMISSION_DIR}/downloads
              target: /downloads
            # Media dirs injected here with override config
        environment:
            - TZ=Europe/Brussels
            - PUID=1000
            - PGID=1000
        depends_on:
            - transmission
        labels:
            - traefik.enable=true
            - traefik.http.services.radarr.loadbalancer.server.port=7878
            - traefik.http.routers.radarr.rule=PathPrefix(`/media/radarr`)
        networks:
            - traefik
    
    lidarr:
        image: linuxserver/lidarr
        container_name: lidarr
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=Europe/Brussels
        volumes:
            - ./lidarr-config:/config
            - ./lidarr-config.xml:/config/config.xml
            - type: bind
              source: ${TRANSMISSION_DIR}/downloads
              target: /downloads
            # Media dirs injected here with override config
        depends_on:
            - transmission
        labels:
            - traefik.enable=true
            - traefik.http.services.lidarr.loadbalancer.server.port=8686
            - traefik.http.routers.lidarr.rule=PathPrefix(`/media/lidarr`)
        networks:
            - traefik

    sonarr:
        image: linuxserver/sonarr
        container_name: sonarr
        environment:
            - TZ=Europe/Brussels
            - PUID=1000
            - PGID=1000
        volumes:
            - ./sonarr-config:/config
            - ./sonarr-config.xml:/config/config.xml
            - type: bind
              source: ${TRANSMISSION_DIR}/downloads
              target: /downloads
            # Media dirs injected here with override config
        depends_on:
            - transmission
        labels:
            - traefik.enable=true
            - traefik.http.services.sonarr.loadbalancer.server.port=8989
            - traefik.http.routers.sonarr.rule=PathPrefix(`/media/sonarr`)
        networks:
            - traefik

    jackett:
        image: linuxserver/jackett
        container_name: jackett
        environment:
            - TZ=Europe/Brussels
            - PUID=1000
            - PGID=1000
        volumes:
            - ./jackett/ServerConfig.json:/config/Jackett/ServerConfig.json
            - ./jackett/jackett-config:/config
            - type: bind
              source: ${TRANSMISSION_DIR}/downloads
              target: /downloads
        depends_on:
            - transmission
        labels:
            - traefik.enable=true
            - traefik.http.services.jackett.loadbalancer.server.port=9117
            - traefik.http.routers.jackett.rule=PathPrefix(`/media/jackett`)
        networks:
            - traefik
    
    ombi:
        image: linuxserver/ombi
        container_name: ombi
        environment:
            - TZ=Europe/Brussels
            - PUID=1000
            - PGID=1000
            - BASE_URL=/media/ombi
        volumes:
            - ./ombi/ombi-config:/config
        labels:
            - traefik.enable=true
            - traefik.http.services.ombi.loadbalancer.server.port=3579
            - traefik.http.routers.ombi.rule=PathPrefix(`/media/ombi`)
        networks:
            - traefik

networks:
  traefik:
    external:
      name: traefik
